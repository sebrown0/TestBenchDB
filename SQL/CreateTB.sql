-- MySQL Script generated by MySQL Workbench
-- Fri Apr 16 13:11:36 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema test_bench
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema test_bench
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `test_bench` DEFAULT CHARACTER SET utf8 ;
USE `test_bench` ;

-- -----------------------------------------------------
-- Table `test_bench`.`employee_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `test_bench`.`employee_type` (
  `id` VARCHAR(10) NOT NULL,
  `type_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `test_bench`.`employee`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `test_bench`.`employee` (
  `id` VARCHAR(45) NOT NULL,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `employee_type_id` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_employee_employee_type1_idx` (`employee_type_id` ASC) VISIBLE,
  CONSTRAINT `fk_employee_employee_type1`
    FOREIGN KEY (`employee_type_id`)
    REFERENCES `test_bench`.`employee_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `test_bench`.`email`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `test_bench`.`email` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `address_1` VARCHAR(255) NOT NULL,
  `address_2` VARCHAR(255) NULL,
  `employee_id` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`, `employee_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_email_employee_idx` (`employee_id` ASC) VISIBLE,
  CONSTRAINT `fk_email_employee`
    FOREIGN KEY (`employee_id`)
    REFERENCES `test_bench`.`employee` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `test_bench`.`application`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `test_bench`.`application` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `date_added` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `description` MEDIUMTEXT NULL,
  `last_tested` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `test_bench`.`version`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `test_bench`.`version` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `major` SMALLINT NOT NULL DEFAULT 1,
  `minor` SMALLINT NOT NULL DEFAULT 0,
  `build` SMALLINT NOT NULL DEFAULT 1,
  `notes` MEDIUMTEXT NULL,
  `application_id` INT NOT NULL,
  PRIMARY KEY (`id`, `application_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_version_application1_idx` (`application_id` ASC) VISIBLE,
  CONSTRAINT `fk_version_application1`
    FOREIGN KEY (`application_id`)
    REFERENCES `test_bench`.`application` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `test_bench`.`test_run`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `test_bench`.`test_run` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `tested_by_employee_id` VARCHAR(45) NOT NULL,
  `version_application_id` INT NOT NULL,
  `version_id` INT NOT NULL,
  `tested_on` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `notes` MEDIUMTEXT NULL,
  `description` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_test_run_employee1_idx` (`tested_by_employee_id` ASC) VISIBLE,
  INDEX `fk_test_run_version1_idx` (`version_id` ASC, `version_application_id` ASC) VISIBLE,
  CONSTRAINT `fk_test_run_employee1`
    FOREIGN KEY (`tested_by_employee_id`)
    REFERENCES `test_bench`.`employee` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_test_run_version1`
    FOREIGN KEY (`version_id` , `version_application_id`)
    REFERENCES `test_bench`.`version` (`id` , `application_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `test_bench`.`module`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `test_bench`.`module` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL COMMENT 'The name of the module should match that of that in the XML file for the test_bench.',
  `last_tested` TIMESTAMP NULL,
  `date_added` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `description` VARCHAR(255) NULL,
  `version_id` INT NOT NULL,
  `version_application_id` INT NOT NULL,
  PRIMARY KEY (`id`, `name`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_module_version1_idx` (`version_id` ASC, `version_application_id` ASC) VISIBLE,
  CONSTRAINT `fk_module_version1`
    FOREIGN KEY (`version_id` , `version_application_id`)
    REFERENCES `test_bench`.`version` (`id` , `application_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `test_bench`.`test_suite`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `test_bench`.`test_suite` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL COMMENT 'The name of the module should match that of that in the XML file for the test_bench.',
  `module_name` VARCHAR(45) NOT NULL,
  `module_id` INT NOT NULL,
  `last_tested` TIMESTAMP NULL,
  `date_added` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `description` VARCHAR(255) NULL,
  PRIMARY KEY (`id`, `name`, `module_name`, `module_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_test_suite_module1_idx` (`module_id` ASC, `module_name` ASC) INVISIBLE,
  CONSTRAINT `fk_test_suite_module1`
    FOREIGN KEY (`module_id` , `module_name`)
    REFERENCES `test_bench`.`module` (`id` , `name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `test_bench`.`test_case`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `test_bench`.`test_case` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL COMMENT 'The name of the module should match that of that in the XML file for the test_bench.',
  `last_tested` TIMESTAMP NULL,
  `date_added` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `description` VARCHAR(255) NULL,
  `test_suite_id` INT NOT NULL,
  `priority` ENUM('1', '2', '3', '4', '5') NULL COMMENT '1 is the highest priority',
  `developer_assigned_employee_id` VARCHAR(45) NULL,
  `creation_type` ENUM('AUTO', 'MAN') NOT NULL COMMENT 'AUTO: The test was not in the DB when run from the test_bench (TB) so the TB added it to this DB.\nMAN: The test was added to this DB before it was run in the TB.\n\nNote: the name of the test case should match that in the TB or another TC will be added.',
  PRIMARY KEY (`id`, `name`, `test_suite_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_test_case_test_suite1_idx` (`test_suite_id` ASC) VISIBLE,
  INDEX `fk_test_case_employee1_idx` (`developer_assigned_employee_id` ASC) VISIBLE,
  CONSTRAINT `fk_test_case_test_suite1`
    FOREIGN KEY (`test_suite_id`)
    REFERENCES `test_bench`.`test_suite` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_test_case_employee1`
    FOREIGN KEY (`developer_assigned_employee_id`)
    REFERENCES `test_bench`.`employee` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `test_bench`.`test_suite_result`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `test_bench`.`test_suite_result` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `result_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `number_test_cases_run` MEDIUMINT NOT NULL,
  `number_failures` MEDIUMINT NOT NULL,
  `number_passed` MEDIUMINT NOT NULL,
  `number_ignored` MEDIUMINT NOT NULL,
  `test_suite_id` INT NOT NULL,
  `test_run_id` BIGINT NOT NULL,
  `comments` VARCHAR(255) NULL,
  PRIMARY KEY (`id`, `test_suite_id`, `test_run_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_test_suite_result_test_suite1_idx` (`test_suite_id` ASC) VISIBLE,
  INDEX `fk_test_suite_result_test_run1_idx` (`test_run_id` ASC) VISIBLE,
  CONSTRAINT `fk_test_suite_result_test_suite1`
    FOREIGN KEY (`test_suite_id`)
    REFERENCES `test_bench`.`test_suite` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_test_suite_result_test_run1`
    FOREIGN KEY (`test_run_id`)
    REFERENCES `test_bench`.`test_run` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `test_bench`.`test_case_result`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `test_bench`.`test_case_result` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `test_passed` TINYINT NOT NULL,
  `test_ignored` TINYINT NOT NULL DEFAULT 0,
  `comments` VARCHAR(255) NULL,
  `test_case_id` INT NOT NULL,
  `test_suite_result_id` INT NOT NULL,
  `test_suite_result_test_suite_id` INT NOT NULL,
  PRIMARY KEY (`id`, `test_case_id`, `test_suite_result_id`, `test_suite_result_test_suite_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_test_case_result_test_case1_idx` (`test_case_id` ASC) VISIBLE,
  INDEX `fk_test_case_result_test_suite_result1_idx` (`test_suite_result_id` ASC, `test_suite_result_test_suite_id` ASC) VISIBLE,
  CONSTRAINT `fk_test_case_result_test_case1`
    FOREIGN KEY (`test_case_id`)
    REFERENCES `test_bench`.`test_case` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_test_case_result_test_suite_result1`
    FOREIGN KEY (`test_suite_result_id` , `test_suite_result_test_suite_id`)
    REFERENCES `test_bench`.`test_suite_result` (`id` , `test_suite_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
